
- name: Create new dir for /etc/etcd
  sudo: true
  file: path=/etc/etcd state=directory

- name: "getting the internal ip"
  command: curl -s http://169.254.169.254/latest/meta-data/local-ipv4
  register: internal_ip

- name: "getting the hostname"
  command: hostname -s
  register: etcd_name

- name: Copy all keys into /etc/etcd
  copy: src={{ item.src }} dest={{ item.dest }}
  sudo: true
  with_items:
    - { src: "../../../../gen_certs/kubernetes.pem", dest: "/etc/etcd/kubernetes.pem"}
    - { src: "../../../../gen_certs/ca.pem", dest: "/etc/etcd/ca.pem"}
    - { src: "../../../../gen_certs/kubernetes-key.pem", dest: "/etc/etcd/kubernetes-key.pem"}

- name: download and unarchive etcd binary and uzip it.
  sudo: true
  unarchive:
    src: "https://github.com/coreos/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: copy etcd binary
  sudo: true
  copy:
    src: "/tmp/etcd-v3.3.10-linux-amd64/etcd"
    dest: "/usr/bin/etcd"
    mode: "+x"
    remote_src: yes

- name: copy etcd binary
  sudo: true
  copy:
    src: "/tmp/etcd-v3.3.10-linux-amd64/etcdctl"
    dest: "/usr/bin/etcdctl"
    remote_src: true
    mode: "+x"

- name: create new dir for /var/lib/etcd
  sudo: true
  file: path=/var/lib/etcd state=directory

- name: create etcd service template
  sudo: true
  template: src=etcd.service.jinja2 dest=/etc/systemd/system/etcd.service

- name: reload deamon.
  sudo: true
  systemd:
    daemon_reload: yes

- name: start enable deamon.
  sudo: true
  systemd:
    name: etcd.service
    state: started
  ignore_errors: yes

- name: confirm nodes are alive.
  sudo: true
  shell: etcdctl --endpoints=http://{{ internal_ip.stdout }}:2379 cluster-health
  ignore_errors: yes